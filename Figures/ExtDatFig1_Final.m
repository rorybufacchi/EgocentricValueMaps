% -----
% USE:
% 
% - Run this script to re-create:
% -- The elements used for making Extended Data Figure 1
%
% - The data necessary for this figure is generated by CreateDataForPlots_Final.m,
% !HOWEVER! a pre-computed version can also be loaded (much faster) from:
% ~~~~~~~~~~~~~~~ https://doi.org/10.5281/zenodo.16408688 ~~~~~~~~~~~~~~~
% -----

% First make sure the path is set right
cFileName                   = matlab.desktop.editor.getActiveFilename;
codePath                    = cFileName(1:end-26);
addpath(                    genpath(codePath));


% NOTE: Change this to the file path where you store the generated data,
% whether downloaded or generated by yourself
dataPath                    = ''; %'C:\Users\Rory Bufacchi\Documents\Projects\DefenseAgent'; '';
if                          isempty(dataPath)
     dataPath                   = SetPathEgocentricMapsData();
end
cd(                         dataPath);

%% LOAD DATA for Extended Data Figure 1
%  NOTE: Load this if not computing the ANN outputs yourself
try
    load('Results\ForFigures\ExtDatFig1_EatingModel.mat')
catch
    warning('No Precomputed data found. Either Compute results using CreateDataForPlots.m, or download precompted results from $')
end



%% Elements used for Extended Data Fig 1b

iM = 1;

f.Eating.f = figure('Position',[50 200 1600 400]);

eatRS = ntRS;

eatRS(iM).s.plt.meanLimbCols  = 1
eatRS(iM).s.plt.holdingRew    = 0;
eatRS(iM).s.plt.lmbCol        = 10;
eatRS(iM).s.plt.plAct         = 2;

fS.lineYLim = [-0.4 0];
fS.lineXLim = [-0.4 0];
fS.xPoints  = [5 5 ; 10 10]';
fS.cAxes    = [-.8 .8];

eatRS(iM).s.plt.colLims = [1.5 13.5];
eatRS(iM).s.plt.rowLims = [1.5 13.5];
fS.gridXstart = -5.5;
fS.gridXstep = 1;
fS.gridYstart = 2.5;
fS.gridYstep = 1;

subplot(2,6,1)
eatRS(iM).s.plt.lmbCol  = 2:14;
[Q,allNeurAct] = CalcNetOutput(eatRS(iM).s,eatRS(iM).w,eatRS(iM).net);
DisplActValsFun(eatRS(iM).s,eatRS(iM).w,-Q);
colorbar off
GridOverImage(fS,gca)
caxis(fS.cAxes);
title('Positive stimulus, average Q-field')

MakeSidePlots(gca,Q,fS,eatRS(iM))
mouthOffset = [-4:2:4]; % [-2:2] ; 
for iO = 1:length(mouthOffset) % loop through offsets

    % current offset
    cLimbCol = 8 - mouthOffset(iO);
    subplot(2,6,1 + iO);
    eatRS(iM).s.plt.lmbCol  = cLimbCol;
    
    [tmpQ,allNeurAct] = CalcNetOutput(eatRS(iM).s,eatRS(iM).w,eatRS(iM).net);
    Q = nanmean(tmpQ,[5 6]);

    eatRS(iM).s.plt.plAct = 1;
    DisplActValsFun(eatRS(iM).s,eatRS(iM).w,-Q);

    colorbar off
    GridOverImage(fS,gca)
    caxis(fS.cAxes);

    MakeSidePlots(gca,Q,fS,eatRS(iM))
end
colormap(redbluecmapRory)


%% Save figures

allFields                   = fields(f);
for iF                      = 1:length(allFields)
    cF                          = allFields{iF};
    set(                        f.(cF).f, 'Renderer', 'painters'); % default, opengl
    saveas(                     f.(cF).f,['Results\Outputs\ExtDatFig1_' cF '.png'] , 'png')
    saveas(                     f.(cF).f,['Results\Outputs\ExtDatFig1_' cF '.eps'] , 'epsc')
    saveas(                     f.(cF).f,['Results\Outputs\ExtDatFig1_' cF '.pdf'] , 'pdf')
end

%% FUNCTIONS

function [] = MakeSidePlots(baseAx,Q,fS,rS)

    Q = - Q;
    ax{1} = baseAx;

    % Plot average OR line through Q-values
    ax{2} = axes('Position',ax{1}.Position .* [1 1 1 0] + [0 -0.1 0 0.1]  );
    plQhoriz = flip(squeeze(nanmean(Q(1,rS.s.plt.lmbCol,2:11,2:end-1,:),[2 3 5]))); % lmb R, C, stim R, C, A
    plot((1:numel(plQhoriz))' - 0.5  , [plQhoriz],'-','LineWidth',2); hold on
    xLims = xlim;
    xlim([0 numel(plQhoriz) ]);
    hold on
    ylim(fS.lineYLim);
    grid on
    ax{2}.XAxis.Visible = 'off';
    ax{2}.YAxis.Visible = 'off';
    ax{3} = axes('Position',ax{1}.Position .* [1 1 0 1] + [-0.03 0 0.03 0]  );
    plQvert = squeeze(nanmean(Q(1,rS.s.plt.lmbCol,2:end-1,2:end-1,:),[2 4 5])); % lmb R, C, stim R, C, A
    plot( plQvert, (numel(plQvert):-1:1)' - 0.5 , '-','LineWidth',2); hold on
    xlim(fS.lineXLim);
    ylim([0 12])
    grid on
    ax{3}.XAxis.Visible = 'off';
    ax{3}.YAxis.Visible = 'off';

end
