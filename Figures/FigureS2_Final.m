% -----
% USE:
% 
% - Run this script to re-create:
% -- The elements used for making Figure S2 of the main paper
%
% - The data necessary for this figure is generated by CreateDataForPlots_Final.m,
% but a pre-computed version can also be loaded from:
% load('Results\ForFigures\ProximityPosition\WorkSpaceForProxPos.mat') $
% load('Results\ForFigures\ProximityPosition\WorkSpaceForProxPos_3.mat') $
% -----


% First make sure the path is set right
cFileName       = matlab.desktop.editor.getActiveFilename;
codePath        = cFileName(1:end-24);
addpath(genpath(codePath));


% NOTE: Change this to the file path where you store the generated data,
% whether downloaded or generated by yourself
dataPath        = '';
if              isempty(dataPath)
     dataPath       = SetPathEgocentricMapsData();
end
cd(             dataPath);


%% Load results
% NOTE: Load this if not computing the ANN outputs yourself
try
    load('Results\ForFigures\FigS2_WaspMovement_Precomputed.mat');
catch
    warning('No Precomputed data found. Either Compute results using CreateDataForPlots.m, or download precomputed results from $');
end


%% Wasp scenario, demonstrating full-body movements happen when wasp is further

nDynam = 2;
allHP = -(0:3:6); 
nHandPos = numel(allHP)
iPl = 0;
cAx = [-6 -1];

f.TwoDimPlot.f        = figure('Position',[20 20 1200 1200]);

for iHP = 1:nHandPos

    cHP = allHP(iHP);
    for iDynam = 1:nDynam

        iPl = iPl + 1

        newQ = allQ.qVals{iDynam};
        sTmp = sBdy;
        iAct = 1:size(newQ,1);

        [newQ2 optAct] = max(newQ(iAct,:,:,:),[],1); % Max value

        f.TwoDimPlot.ax{iPl}    = subplot(nHandPos,nDynam,iPl);

        zPos = sTmp.clc.nearPos(3) - cHP; % POSITION OF SLICE
        imagesc(squeeze(-optAct(1,:,:,zPos )) );

        % Show where the hand and the body are
        hold on
        plSymb = {'xk','ok'};
        inSlice = find(sBdy.clc.startSZ == zPos);
        for cVol = inSlice
            for iSplitInd = 1:length(sBdy.clc.rewSplitInd)
                if cVol >= sBdy.clc.rewSplitInd(iSplitInd) & cVol < sBdy.clc.rewSplitInd(iSplitInd+1)
                    plot(sBdy.clc.startSC(cVol),sBdy.clc.startSR(cVol),plSymb{iSplitInd},'LineWidth',2)
                end
            end
        end
        hold off;

        % caxis auto
        caxis(cAx);
        xlim([12 49]);
        ylim([22 60]);

    end
end

f.TwoDimPlot.ax{iPl+1} = axes('Position', [0.9 0.05 0.1 0.9])
colorbar;
caxis(cAx);
f.TwoDimPlot.ax{iPl+1}.Visible = 'off';

% ------------------------------------------
% Create a custom colormap with 'stay still' as white
custom_colormap = jet;
% Replace the color for the specific value with white
custom_colormap(end, :) = [1, 1, 1];
colormap(custom_colormap);
% ------------------------------------------

%% Save figures

allFields = fields(f);
for iF = 1:length(allFields)
    cF = allFields{iF};
    
    set(f.(cF).f, 'Renderer', 'painters'); % default, opengl
    saveas(f.(cF).f,['Results\Outputs\FigureS2_' cF '.png'] , 'png')
    saveas(f.(cF).f,['Results\Outputs\FigureS2_' cF '.eps'] , 'epsc')
    saveas(f.(cF).f,['Results\Outputs\FigureS2_' cF '.pdf'] , 'pdf')
end


